@charset "UTF-8";

/* Â© DialogueTrainer */

@use 'base' as *;

.long {
  &::after {
    content: '';
    position: absolute;
    right: 0;
    bottom: 0;
    z-index: 10;
    display: block;
    width: 28px;
    height: 12px;
    background-image: url('../svg/dots.svg');
    background-position: 4px;
    background-repeat: no-repeat;
    background-size: 24px 10px;
    border-top-left-radius: 5px;
  }

  &.player::after {
    background-color: $col-node-player;
  }

  &.computer::after {
    background-color: $col-node-computer;
  }

  &.situation::after {
    background-color: $col-node-situation;
  }

  .statementText {
    position: relative;
    max-height: 72px;
    overflow: hidden;
    mask-image: linear-gradient(rgba(black, 1) 0%, rgba(black, 1) 75%, rgba(black, 0) 100%);
  }

  .statementInput {
    min-height: 200px;
  }
}

.statementText {
  overflow-wrap: break-word;
  hyphens: auto;
}

// Used to test length of string in node
.lengthTest {
  position: absolute;
  width: auto;
  height: auto;
  font-size: 11px;
  white-space: nowrap;
  visibility: hidden;
  // Thanks to Herb Caudill comment
}

.nodestatement {
  width: 100%;
  height: 100%;
  padding: 0;
  margin: auto;
  font: inherit;
  box-sizing: border-box;
}

.text {
  width: 420px;
}

.imgDiv {
  pointer-events: none;

  > span {
    display: inline-block;
    pointer-events: all;
  }

  svg {
    position: relative;
    width: 16px;
    height: 16px;
    margin: 1px;
    fill: rgba(black, .85);
    pointer-events: none;
  }
}
