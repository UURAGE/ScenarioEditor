@charset "UTF-8";

// Â© Utrecht University and DialogueTrainer

@import 'variables';
@import 'colors';
@import 'mixins';

.w {
    padding: 0.5em 1em;
    position: absolute;
    border: 1px solid black;
    z-index: 4;
    border-radius: 0.5em;
    opacity: 0.8;
    filter: alpha(opacity=80);
    cursor: move;
    background-color: white;
    font-size: 11px;
    transition: background-color 0.15s ease-in, color 0.15s ease-in;
    box-shadow: 0px 2px 2px rgba(black, 0.05), 0px 1px 10px rgba(black, 0.05);
    ul {
        margin: 0;
        padding: 0;
    }
    &.computer {
        border: 3px solid $col-node-computer;
    }
    &.player {
        border: 3px solid $col-node-player;
    }
    &.situation {
        border: 3px solid $col-node-situation;
    }
    &.editing,
    &.jtk-drag {
        z-index: 5;
	}
	.nodeContent {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        padding: .5em;
        background: transparent;
    }
    &.selected,
    &.ui-selected,
    &:hover {
        color: white;
	}
	&:hover,
	&.color-label.jtk-hover,
	&.jtk-source-hover,
	&.jtk-target-hover {
		&.computer {
			background-color: lighten($col-node-computer, 25%);
		}
		&.player {
			background-color: lighten($col-node-player, 25%);
		}
		&.situation {
			background-color: lighten($col-node-situation, 25%);
		}
	}
    &.treeContainer {
        &:hover {
            background-color: $col-subject;
        }
        &.selected,
        &.ui-selected {
            background-color: darken($col-subject, 15%);
        }
        &.ui-selecting {
            background-color: darken($col-subject, 15%);
        }
	}
	&.ui-selecting {
		&.computer {
			background-color: lighten($col-node-computer, 40%);
		}
		&.player {
			background-color: lighten($col-node-player, 40%);
		}
		&.situation {
			background-color: lighten($col-node-situation, 40%);
		}
	}
	&.selected,
    &.ui-selected {
		&.computer {
			background-color: lighten($col-node-computer, 15%);
		}
		&.player {
			background-color: lighten($col-node-player, 15%);
		}
		&.situation {
			background-color: lighten($col-node-situation, 15%);
		}
	}
	&.parentSelected {
		&.computer {
			background-color: lighten($col-node-computer, 50%);
		}
		&.player {
			background-color: lighten($col-node-player, 50%);
		}
		&.situation {
			background-color: lighten($col-node-situation, 50%);
		}
	}
	&:not(.jtk-drag):not(.jtk-drag-active) {
		>.ep {
			position: absolute;
			z-index: -1;
			top: -10px;
			bottom: -10px;
			left: -10px;
			right: -10px;
			cursor: pointer;
			transition: box-shadow 0.15s ease-in, color 0.15s ease-in;
			border-radius: 10px;
			&:hover {
				box-shadow: 0px 0px 15px 2px rgba(black, 0.15), 0px 1px 3px 0px rgba(black, 0.15);
				.anchor {
					background-color: black;
					transition: background-color 0.25s ease;
					&::after {
						opacity: .25;
						transform: scale(5);
					}
				}
			}
			.anchor {
				width: 4px;
				height: 4px;
				position: absolute;
				pointer-events: none;
				border-radius: 50%;
				left: calc(100% - 10px);
				top: 50%;
				bottom: 50%;
				right: auto;
				background-color: transparent;
				transition: background-color 0.25s ease, left 0s step-end 0.15s, top 0s step-end 0.15s, right 0s step-end 0.15s, bottom 0s step-end 0.15s;
				&::after {
					content: "";
					display: block;
					position: absolute;
					top: 0;
					bottom: 0;
					left: 0;
					right: 0;
					background-color: black;
					border-radius: 50%;
					opacity: 0;
					transition: opacity 0.25s ease, transform 0.25s ease;
				}
			}
		}
		&:not(.jtk-connected) {
			>.ep {
				>.anchor {
					// Only show anchor on not connected nodes
					transition: background-color 0.25s ease, left 0.15s linear, top 0.15s linear, right 0.15s linear, bottom 0.15s linear;
					background-color: rgba(black, 0.75);
				}
				&:hover {
					>.anchor {
						transition: background-color 0.25s ease, left 0.15s linear, top 0.15s linear, right 0.15s linear, bottom 0.15s linear;
						background-color: black;
					}
				}
			}
		}
	}
}

$nodeOverlays: (
	".allowInterleaveNode":		$col-allow-interleave,
	".allowDialogueEndNode":	$col-allow-dialogue-end,
	".endNode":					$col-end-node,
	".openResponse":			$col-open-response
);

#{map-keys($nodeOverlays)} {
	&:hover::before {
		display: block;
		content: "";
		position: absolute;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
	}
}

@each $nodeType, $nodeColor in $nodeOverlays {
	@include nodePropertyGradient($nodeType, $nodeColor);
}

.color-label.jtk-hover,
.jtk-source-hover,
.jtk-target-hover {
    color: white;
}

#clone {
    opacity: 0.5;
}

.color-label {
    transition: background-color 0.15s ease-in, color 0.15s ease-in;
    background-color: white;
    opacity: 0.8;
    padding: 0.3em;
    border-radius: 0.5em;
    border: 1px solid rgba(black, 0.5);
    cursor: pointer;
}

.jtk-endpoint {
    z-index: 3;
}

.jtk-connector path {
    cursor: pointer;
}
